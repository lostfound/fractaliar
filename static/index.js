// Generated by CoffeeScript 1.3.3
(function() {
  var parse_transforms, set_events, set_stroke, set_transforms, stroke, trfm,
    _this = this;

  set_events = function() {
    $('.fractal_select').change(function() {
      var fractal_node, n,
        _this = this;
      n = $(this).find(':selected')[0].value;
      fractal_node = $(this).parent().parent().find('.base_fractal')[0];
      return $.get("fractal", {
        n: n
      }, function(data) {
        return $(fractal_node).html(data);
      });
    });
    $('#Plus').click(function() {
      var fr, me;
      me = $(this).parent().parent();
      fr = me.parent().find('.base_fractal')[0];
      $(fr).parent().clone().appendTo(me.parent());
      me.clone().appendTo(me.parent());
      $(this).parent().parent().html('+');
      return set_events();
    });
    return $('#EQ').click(function() {
      var fractal, fractals, shape, _i, _len, _ref,
        _this = this;
      shape = $('#shape_select').find(':selected')[0].value;
      fractals = null;
      _ref = $('.fractal_select');
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        fractal = _ref[_i];
        if (fractals) {
          fractals += 'x' + $(fractal).find(':selected')[0].value;
        } else {
          fractals = $(fractal).find(':selected')[0].value;
        }
      }
      return $.get("gen", {
        shape: shape,
        fractals: fractals
      }, function(url) {
        $('#link').html('<a href="' + url + '">Fractal here</a>');
        return $.get(url, {}, function(data) {
          $('#result').html((new XMLSerializer()).serializeToString(data));
          if (trfm) {
            set_transforms(trfm);
          }
          if (stroke) {
            return set_stroke(stroke);
          }
        });
      });
    });
  };

  trfm = null;

  stroke = null;

  parse_transforms = function() {
    var scale, t, ts, x, y;
    t = $('#ff').attr('transform');
    ts = t.split(',');
    x = parseInt(ts[0].split('(')[1]);
    y = parseInt(ts[1].split(')')[0]);
    scale = parseFloat(t.split('(')[2].split(')')[0]);
    return [x, y, scale];
  };

  set_stroke = function(w) {
    $('#ff').attr('stroke-width', w);
    return stroke = w;
  };

  set_transforms = function(ts) {
    trfm = ts;
    return $('#ff').attr('transform', 'translate(' + ts[0] + ',' + ts[1] + ') scale(' + ts[2] + ')');
  };

  $(document).ready(function() {
    var fractal_node, n;
    n = $('#shape_select')[0].value;
    $.get("shape", {
      n: n
    }, function(data) {
      return $('#base_shape').html(data);
    });
    n = $('.fractal_select').find(':selected')[0].value;
    fractal_node = $('.fractal_select').parent().parent().find('.base_fractal')[0];
    $.get("fractal", {
      n: n
    }, function(data) {
      return $(fractal_node).html(data);
    });
    $('#shape_select').change(function() {
      var _this = this;
      n = $(this).find(':selected')[0].value;
      return $.get("shape", {
        n: n
      }, function(data) {
        return $('#base_shape').html(data);
      });
    });
    $('#Up').click(function() {
      var ts;
      ts = parse_transforms();
      ts[1] -= 3;
      return set_transforms(ts);
    });
    $('#Down').click(function() {
      var ts;
      ts = parse_transforms();
      ts[1] += 3;
      return set_transforms(ts);
    });
    $('#Left').click(function() {
      var ts;
      ts = parse_transforms();
      ts[0] -= 3;
      return set_transforms(ts);
    });
    $('#Right').click(function() {
      var ts;
      ts = parse_transforms();
      ts[0] += 3;
      return set_transforms(ts);
    });
    $('#Zoomin').click(function() {
      var ts;
      ts = parse_transforms();
      ts[2] += .3;
      return set_transforms(ts);
    });
    $('#Zoomout').click(function() {
      var ts;
      ts = parse_transforms();
      ts[2] -= .3;
      return set_transforms(ts);
    });
    $('#stroke').change(function() {
      var w;
      w = $(this).find(':selected')[0].value;
      return set_stroke(w);
    });
    return set_events();
  });

}).call(this);
